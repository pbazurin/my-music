{"version":3,"sources":["components/Explorer/Explorer.js","components/Player/Player.js","logo.png","App.js","reportWebVitals.js","index.js"],"names":["Explorer","props","useState","db","setDB","isSearchActive","setIsSearchActive","searchText","setSearchText","currentPath","setCurrentPath","selectedItemId","setSelectedItemId","explorerItems","setExplorerItems","historyVideoIdPrefix","toggleSearchInputFocus","isFocus","goToItem","itemId","item","find","yId","path","split","slice","join","goToFolder","videoSelected","push","name","isFolder","forEach","dbItem","indexOf","shiftedPath","replace","folderName","selectVideoIdFromUrl","useCallback","prefixIndex","document","URL","length","useEffect","database","DB","pop","sort","a","b","toUpperCase","window","onpopstate","bind","className","type","onFocus","onBlur","onInput","e","text","matchedItems","searchByText","target","value","map","onClick","history","pushState","itemClick","Player","playerId","player","setPlayer","isInitialized","setIsInitialized","onYouTubePlayerAPIReady","newPlayer","YT","videoId","playerVars","autoplay","loop","rel","showinfo","events","onReady","onStateChange","data","playVideo","onError","ReactGA","exception","description","loadVideoById","id","initialize","App","selectedVideoId","setSelectedVideoId","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.be7c94bf.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport DB from \"./db.json\";\r\nimport \"./Explorer.css\";\r\n\r\nfunction Explorer(props) {\r\n  const [db, setDB] = useState(null);\r\n  const [isSearchActive, setIsSearchActive] = useState(false);\r\n  const [searchText, setSearchText] = useState(null);\r\n  const [currentPath, setCurrentPath] = useState(null);\r\n  const [selectedItemId, setSelectedItemId] = useState(null);\r\n  const [explorerItems, setExplorerItems] = useState([]);\r\n  const historyVideoIdPrefix = \"?v=\";\r\n\r\n  const toggleSearchInputFocus = (isFocus) => {\r\n    setIsSearchActive(searchText || isFocus);\r\n  };\r\n  const searchByText = (text) => {\r\n    setSearchText(text);\r\n\r\n    if (!text) {\r\n      goToItem(selectedItemId);\r\n      return;\r\n    }\r\n\r\n    const matchedItems = [];\r\n    db.forEach((item) => {\r\n      if (text && item.name.toUpperCase().indexOf(text.toUpperCase()) === -1) {\r\n        return;\r\n      }\r\n\r\n      matchedItems.push(item);\r\n    });\r\n\r\n    setExplorerItems(matchedItems);\r\n  };\r\n  const goToItem = (itemId) => {\r\n    const item = db.find((item) => item.yId === itemId);\r\n    const currentPath = item ? item.path.split(\"/\").slice(0, -1).join(\"/\") : \"\";\r\n\r\n    goToFolder(currentPath);\r\n\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    setSelectedItemId(itemId);\r\n    props.videoSelected(itemId);\r\n  };\r\n  const goToFolder = (path) => {\r\n    const explorerItems = [];\r\n\r\n    if (path) {\r\n      explorerItems.push({\r\n        name: \"...\",\r\n        isFolder: true,\r\n        path: path.split(\"/\").slice(0, -1).join(\"/\"),\r\n      });\r\n    }\r\n\r\n    db.forEach((dbItem) => {\r\n      if (path && dbItem.path.indexOf(path) === -1) {\r\n        return;\r\n      }\r\n\r\n      const shiftedPath = path\r\n        ? dbItem.path.replace(path + \"/\", \"\")\r\n        : dbItem.path;\r\n\r\n      if (shiftedPath.indexOf(\"/\") === -1) {\r\n        explorerItems.push(dbItem);\r\n        return;\r\n      }\r\n\r\n      const folderName = shiftedPath.split(\"/\")[0];\r\n      const isFolderAlreadyAdded = !!explorerItems.find(\r\n        (item) => item.name === folderName\r\n      );\r\n\r\n      if (isFolderAlreadyAdded) {\r\n        return;\r\n      }\r\n\r\n      explorerItems.push({\r\n        name: folderName,\r\n        isFolder: true,\r\n        path: path ? path + \"/\" + folderName : folderName,\r\n      });\r\n    });\r\n\r\n    setCurrentPath(path);\r\n    setExplorerItems(explorerItems);\r\n  };\r\n  const itemClick = (item) => {\r\n    if (item.isFolder) {\r\n      goToFolder(item.path);\r\n    } else {\r\n      window.history.pushState(null, \"\", historyVideoIdPrefix + item.yId);\r\n      setSelectedItemId(item.yId);\r\n      props.videoSelected(item.yId);\r\n    }\r\n  };\r\n  const selectVideoIdFromUrl = useCallback(() => {\r\n    if (!db) {\r\n      return;\r\n    }\r\n\r\n    const prefixIndex = document.URL.indexOf(historyVideoIdPrefix);\r\n\r\n    const itemId =\r\n      prefixIndex === -1\r\n        ? null\r\n        : document.URL.slice(prefixIndex + historyVideoIdPrefix.length);\r\n\r\n    if (itemId) {\r\n      goToItem(itemId);\r\n    } else {\r\n      goToFolder();\r\n    }\r\n  }, [db]);\r\n\r\n  useEffect(() => {\r\n    const database = DB;\r\n    database.forEach((dbItem) => {\r\n      dbItem.name = dbItem.path.split(\"/\").pop();\r\n      dbItem.isFolder = false;\r\n    });\r\n\r\n    database.sort(function (a, b) {\r\n      return a.path.toUpperCase() > b.path.toUpperCase() ? 1 : -1;\r\n    });\r\n\r\n    setDB(database);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.onpopstate = selectVideoIdFromUrl.bind(this);\r\n  }, [selectVideoIdFromUrl]);\r\n\r\n  useEffect(() => {\r\n    selectVideoIdFromUrl();\r\n  }, [selectVideoIdFromUrl]);\r\n\r\n  return (\r\n    <div className=\"explorer\">\r\n      <div className=\"explorer_toolbar\">\r\n        <div className=\"explorer_toolbar_currPath\">{currentPath}</div>\r\n        <div className=\"explorer_toolbar_search\">\r\n          <input\r\n            type=\"text\"\r\n            className={\r\n              isSearchActive\r\n                ? \"explorer_toolbar_search_text explorer_toolbar_search_text--active\"\r\n                : \"explorer_toolbar_search_text\"\r\n            }\r\n            onFocus={() => toggleSearchInputFocus(true)}\r\n            onBlur={() => toggleSearchInputFocus(false)}\r\n            onInput={(e) => searchByText(e.target.value)}\r\n          />\r\n          <i className=\"icon explorer_toolbar_search_icon\"></i>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"explorer_content\">\r\n        {explorerItems?.map((item) => (\r\n          <div\r\n            key={item.name}\r\n            className={\r\n              item.yId === selectedItemId\r\n                ? \"explorer_content_item explorer_content_item--active\"\r\n                : \"explorer_content_item\"\r\n            }\r\n            onClick={() => itemClick(item)}\r\n          >\r\n            <i\r\n              className={\r\n                item.isFolder\r\n                  ? \"icon explorer_content_item_icon folderIcon\"\r\n                  : \"icon explorer_content_item_icon musicItemIcon\"\r\n              }\r\n            ></i>\r\n            <span className=\"explorer_content_item_text\">{item.name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Explorer;\r\n","import { useEffect, useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport \"./Player.css\";\r\n\r\nfunction Player(props) {\r\n  const playerId = \"ytplayer\";\r\n  const defaultVideoId = \"guXMb7zLblM\";\r\n  let [player, setPlayer] = useState(null);\r\n  let [isInitialized, setIsInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.onYouTubePlayerAPIReady = function () {\r\n      const newPlayer = new window.YT.Player(playerId, {\r\n        videoId: defaultVideoId,\r\n        playerVars: {\r\n          autoplay: 1,\r\n          loop: 1,\r\n          rel: 0,\r\n          showinfo: 0,\r\n        },\r\n        events: {\r\n          onReady: () => setIsInitialized(true),\r\n          onStateChange: (a) => {\r\n            if (a.data === 0) {\r\n              newPlayer.playVideo();\r\n            }\r\n          },\r\n          onError: () =>\r\n            ReactGA.exception({\r\n              description: `Player doesn't feel well`,\r\n            }),\r\n        },\r\n      });\r\n      setPlayer(newPlayer);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!player || !player.loadVideoById || !props.videoId) {\r\n      return;\r\n    }\r\n\r\n    player.loadVideoById(props.videoId);\r\n  }, [props.videoId, player, isInitialized]);\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player_header\"></div>\r\n      <div id={playerId} className=\"player_content\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","export default __webpack_public_path__ + \"static/media/logo.795a6112.png\";","import { useState } from \"react\";\nimport ReactGA from \"react-ga\";\nimport \"./App.css\";\nimport Explorer from \"./components/Explorer/Explorer\";\nimport Player from \"./components/Player/Player\";\nimport logo from \"./logo.png\";\n\nconst TRACKING_ID = \"UA-61056553-1\";\n\nReactGA.initialize(TRACKING_ID);\n\nfunction App() {\n  const [selectedVideoId, setSelectedVideoId] = useState(null);\n\n  return (\n    <>\n      <header>\n        <img src={logo} alt=\"logo\" className=\"logo\" />\n        <span className=\"logo_text\">myMusic</span>\n      </header>\n\n      <main className=\"mainContainer\">\n        <div className=\"mainContainer_box\">\n          <Player videoId={selectedVideoId}></Player>\n\n          <Explorer videoSelected={(yId) => setSelectedVideoId(yId)}></Explorer>\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}